plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' // redis
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok' // lombok
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j' // mysql
	annotationProcessor 'org.projectlombok:lombok' // lombok
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.1'

	// Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// jpa
	implementation 'org.hibernate:hibernate-validator:8.0.0.Final'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// spring security
	compileOnly 'org.springframework.boot:spring-boot-starter-security'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// OAuth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// file
	implementation 'commons-io:commons-io:2.6' // 파일추가를 위함
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' /* 레이아웃 */

	// Email Send
	implementation 'org.springframework.boot:spring-boot-starter-mail'

}
def querydslSrcDir = 'src/main/generated'
sourceSets {
  main {
    java {
      srcDirs += [ querydslSrcDir ]
    }
  }
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

// clean task 실행시 QClass 삭제
clean {
	delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성 위치
}

tasks.named('test') {
    useJUnitPlatform()
}